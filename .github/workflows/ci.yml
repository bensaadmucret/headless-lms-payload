name: 'CI - Ex√©cuter les Tests'

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: payload
          POSTGRES_PASSWORD: payload
          POSTGRES_DB: payload-test-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run test:vitest -- --coverage --run
        env:
          PAYLOAD_TEST_DATABASE_URI: postgresql://payload:payload@localhost:5432/payload-test-db
          GEMINI_API_KEY: test-key-for-ci
          NODE_ENV: test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-payload-cms
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Check coverage thresholds
        run: |
          echo "üìä Coverage Summary:"
          if [ -f coverage/coverage-summary.json ]; then
            cat coverage/coverage-summary.json | jq '.total'
          else
            echo "‚ö†Ô∏è  Coverage summary not found"
          fi