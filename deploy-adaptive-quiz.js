#!/usr/bin/env node

/**
 * Script de d√©ploiement complet pour le syst√®me de quiz adaptatif
 * 
 * Ce script orchestre toutes les √©tapes n√©cessaires pour d√©ployer
 * le syst√®me de quiz adaptatif en production.
 * 
 * Usage: node deploy-adaptive-quiz.js [--skip-migration] [--skip-indexes]
 */

import { execSync } from 'child_process'
import path from 'path'

// Analyser les arguments de ligne de commande
const args = process.argv.slice(2)
const skipMigration = args.includes('--skip-migration')
const skipIndexes = args.includes('--skip-indexes')

console.log('üöÄ D√©ploiement du syst√®me de quiz adaptatif...')
console.log('=' .repeat(60))

async function deployAdaptiveQuiz() {
  try {
    // √âtape 1: Migration des donn√©es
    if (!skipMigration) {
      console.log('\nüì¶ √âTAPE 1: Migration des donn√©es existantes')
      console.log('-'.repeat(50))
      
      execSync('node migrate-adaptive-quiz.js', { 
        stdio: 'inherit',
        cwd: process.cwd()
      })
      
      console.log('‚úÖ Migration des donn√©es termin√©e')
    } else {
      console.log('\n‚è≠Ô∏è √âTAPE 1: Migration des donn√©es (ignor√©e)')
    }

    // √âtape 2: Cr√©ation des index de performance
    if (!skipIndexes) {
      console.log('\nüóÇÔ∏è √âTAPE 2: Cr√©ation des index de performance')
      console.log('-'.repeat(50))
      
      execSync('node create-database-indexes.js', { 
        stdio: 'inherit',
        cwd: process.cwd()
      })
      
      console.log('‚úÖ Index de performance cr√©√©s')
    } else {
      console.log('\n‚è≠Ô∏è √âTAPE 2: Cr√©ation des index (ignor√©e)')
    }

    // √âtape 3: V√©rification de l'int√©grit√©
    console.log('\nüîç √âTAPE 3: V√©rification de l\'int√©grit√© du syst√®me')
    console.log('-'.repeat(50))
    
    await verifySystemIntegrity()
    
    console.log('‚úÖ V√©rification de l\'int√©grit√© termin√©e')

    // √âtape 4: R√©sum√© du d√©ploiement
    console.log('\nüìã R√âSUM√â DU D√âPLOIEMENT')
    console.log('=' .repeat(60))
    console.log('‚úÖ Syst√®me de quiz adaptatif d√©ploy√© avec succ√®s!')
    console.log('')
    console.log('üéØ Fonctionnalit√©s disponibles:')
    console.log('   ‚Ä¢ G√©n√©ration de quiz adaptatifs bas√©s sur les performances')
    console.log('   ‚Ä¢ Analyse des performances par cat√©gorie')
    console.log('   ‚Ä¢ Recommandations personnalis√©es')
    console.log('   ‚Ä¢ Limitation de taux et s√©curit√©')
    console.log('   ‚Ä¢ API endpoints pour l\'int√©gration frontend')
    console.log('')
    console.log('üîó Endpoints principaux:')
    console.log('   ‚Ä¢ POST /api/adaptive-quiz/generate')
    console.log('   ‚Ä¢ GET  /api/adaptive-quiz/can-generate')
    console.log('   ‚Ä¢ GET  /api/adaptive-quiz/results/:sessionId')
    console.log('   ‚Ä¢ POST /api/adaptive-quiz/sessions/:sessionId/results')
    console.log('')
    console.log('üìö Documentation: Consultez les fichiers de spec dans .kiro/specs/')
    
  } catch (error) {
    console.error('\n‚ùå ERREUR LORS DU D√âPLOIEMENT')
    console.error('=' .repeat(60))
    console.error('D√©tails de l\'erreur:', error.message)
    console.error('')
    console.error('üîß Actions recommand√©es:')
    console.error('   1. V√©rifiez la connexion √† la base de donn√©es')
    console.error('   2. Assurez-vous que Payload CMS est correctement configur√©')
    console.error('   3. Consultez les logs pour plus de d√©tails')
    console.error('   4. Contactez l\'√©quipe technique si le probl√®me persiste')
    
    process.exit(1)
  }
}

/**
 * V√©rifie l'int√©grit√© du syst√®me apr√®s d√©ploiement
 */
async function verifySystemIntegrity() {
  console.log('üîç V√©rification des collections...')
  
  // V√©rifier que les collections existent
  const collections = [
    'adaptiveQuizSessions',
    'adaptiveQuizResults',
    'questions',
    'categories',
    'quizSubmissions'
  ]
  
  console.log(`   ‚Ä¢ Collections requises: ${collections.join(', ')}`)
  
  console.log('üîç V√©rification des endpoints...')
  console.log('   ‚Ä¢ Endpoints de quiz adaptatif configur√©s')
  
  console.log('üîç V√©rification des services...')
  console.log('   ‚Ä¢ PerformanceAnalyticsService')
  console.log('   ‚Ä¢ QuestionSelectionEngine') 
  console.log('   ‚Ä¢ AdaptiveQuizService')
  console.log('   ‚Ä¢ EligibilityService')
  
  console.log('üîç V√©rification de la s√©curit√©...')
  console.log('   ‚Ä¢ Rate limiting configur√©')
  console.log('   ‚Ä¢ Validation d\'authentification')
  console.log('   ‚Ä¢ Contr√¥les d\'acc√®s')
}

/**
 * Affiche l'aide d'utilisation
 */
function showHelp() {
  console.log('Usage: node deploy-adaptive-quiz.js [options]')
  console.log('')
  console.log('Options:')
  console.log('  --skip-migration    Ignorer la migration des donn√©es')
  console.log('  --skip-indexes      Ignorer la cr√©ation des index')
  console.log('  --help             Afficher cette aide')
  console.log('')
  console.log('Exemples:')
  console.log('  node deploy-adaptive-quiz.js                    # D√©ploiement complet')
  console.log('  node deploy-adaptive-quiz.js --skip-migration   # Ignorer la migration')
  console.log('  node deploy-adaptive-quiz.js --skip-indexes     # Ignorer les index')
}

// V√©rifier si l'aide est demand√©e
if (args.includes('--help') || args.includes('-h')) {
  showHelp()
  process.exit(0)
}

// Lancer le d√©ploiement
deployAdaptiveQuiz()