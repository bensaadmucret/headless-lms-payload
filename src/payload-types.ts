/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    users: User;
    subscriptions: Subscription;
    categories: Category;
    courses: Course;
    lessons: Lesson;
    sections: Section;
    assignments: Assignment;
    prerequisites: Prerequisite;
    quizzes: Quiz;
    questions: Question;
    'quiz-submissions': QuizSubmission;
    progress: Progress;
    'study-sessions': StudySession;
    badges: Badge;
    'color-schemes': ColorScheme;
    'subscription-plans': SubscriptionPlan;
    tenants: Tenant;
    'system-metrics': SystemMetric;
    conversations: Conversation;
    'knowledge-base': KnowledgeBase;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    subscriptions: SubscriptionsSelect<false> | SubscriptionsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    lessons: LessonsSelect<false> | LessonsSelect<true>;
    sections: SectionsSelect<false> | SectionsSelect<true>;
    assignments: AssignmentsSelect<false> | AssignmentsSelect<true>;
    prerequisites: PrerequisitesSelect<false> | PrerequisitesSelect<true>;
    quizzes: QuizzesSelect<false> | QuizzesSelect<true>;
    questions: QuestionsSelect<false> | QuestionsSelect<true>;
    'quiz-submissions': QuizSubmissionsSelect<false> | QuizSubmissionsSelect<true>;
    progress: ProgressSelect<false> | ProgressSelect<true>;
    'study-sessions': StudySessionsSelect<false> | StudySessionsSelect<true>;
    badges: BadgesSelect<false> | BadgesSelect<true>;
    'color-schemes': ColorSchemesSelect<false> | ColorSchemesSelect<true>;
    'subscription-plans': SubscriptionPlansSelect<false> | SubscriptionPlansSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    'system-metrics': SystemMetricsSelect<false> | SystemMetricsSelect<true>;
    conversations: ConversationsSelect<false> | ConversationsSelect<true>;
    'knowledge-base': KnowledgeBaseSelect<false> | KnowledgeBaseSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'cors-config': CorsConfig;
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    'cors-config': CorsConfigSelect<false> | CorsConfigSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  user: number | User;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Contenu textuel extrait automatiquement du document
   */
  extractedContent?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  /**
   * Le cursus actuel de l’étudiant.
   */
  studyYear?: ('pass' | 'las') | null;
  /**
   * Indique si l’étudiant a terminé le parcours d’intégration.
   */
  onboardingComplete?: boolean | null;
  /**
   * Permet au coach de calibrer le plan d'étude.
   */
  examDate?: string | null;
  /**
   * Objectifs et préférences de l'étudiant pour personnaliser son coaching.
   */
  studyProfile?: {
    targetScore?: number | null;
    studyHoursPerWeek?: number | null;
  };
  /**
   * Stocke les scores de compétence par matière. Mis à jour par le coach IA.
   */
  competencyProfile?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Indique si l’étudiant a passé le quiz de positionnement
   */
  hasTakenPlacementQuiz?: boolean | null;
  role: 'superadmin' | 'admin' | 'teacher' | 'student';
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Instances d’abonnements (Paddle) rattachées aux utilisateurs.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions".
 */
export interface Subscription {
  id: number;
  user: number | User;
  provider: 'paddle';
  /**
   * Identifiant client Paddle (customer_id)
   */
  customerId?: string | null;
  /**
   * Identifiant d’abonnement (subscription_id) unique
   */
  subscriptionId: string;
  productId?: string | null;
  priceId?: string | null;
  status: 'trialing' | 'active' | 'past_due' | 'canceled';
  /**
   * Fin de période d’essai
   */
  trialEnd?: string | null;
  /**
   * Fin de la période de facturation en cours
   */
  currentPeriodEnd?: string | null;
  /**
   * Annulation à la fin de la période en cours
   */
  cancelAtPeriodEnd?: boolean | null;
  lastPaymentAt?: string | null;
  /**
   * Montant en plus petite unité (ex: centimes)
   */
  amount?: number | null;
  currency?: string | null;
  /**
   * Historique des événements Paddle liés à cet abonnement
   */
  history?:
    | {
        type:
          | 'subscription_created'
          | 'payment_succeeded'
          | 'subscription_updated'
          | 'payment_failed'
          | 'subscription_canceled';
        occurredAt: string;
        /**
         * Payload d’événement (sanitisé/tronqué si nécessaire)
         */
        raw?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Clés/valeurs additionnelles (optionnel)
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: number;
  title: string;
  description: string;
  level: 'beginner' | 'intermediate' | 'advanced';
  author: number | User;
  published?: boolean | null;
  tags?: string | null;
  duration?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons".
 */
export interface Lesson {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  course: number | Course;
  order: number;
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sections".
 */
export interface Section {
  id: number;
  title: string;
  course: number | Course;
  order: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assignments".
 */
export interface Assignment {
  id: number;
  title: string;
  description?: string | null;
  course: number | Course;
  dueDate?: string | null;
  submitted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prerequisites".
 */
export interface Prerequisite {
  id: number;
  name: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quizzes".
 */
export interface Quiz {
  id: number;
  title: string;
  /**
   * Définit le rôle de ce quiz dans le parcours de l'étudiant.
   */
  quizType?: ('standard' | 'placement') | null;
  /**
   * Description détaillée du quiz
   */
  description?: string | null;
  /**
   * Sélectionnez les questions à inclure dans ce quiz
   */
  questions: (number | Question)[];
  /**
   * Cours auquel ce quiz est associé (optionnel)
   */
  course?: (number | null) | Course;
  /**
   * Définir si le quiz est visible pour les utilisateurs
   */
  published?: boolean | null;
  /**
   * Durée estimée pour terminer le quiz (en minutes)
   */
  duration?: number | null;
  /**
   * Score minimum requis pour réussir le quiz (en pourcentage)
   */
  passingScore?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Notre banque centrale de questions pour tous les quiz et sessions d'étude.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions".
 */
export interface Question {
  id: number;
  questionText: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  questionType: 'multipleChoice';
  /**
   * Définissez les options pour le QCM et cochez la bonne réponse.
   */
  options?:
    | {
        optionText: string;
        isCorrect?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Cette explication s'affichera à l'étudiant après qu'il ait répondu. Champ temporairement en texte simple pour débogage.
   */
  explanation: string;
  course: number | Course;
  category: number | Category;
  /**
   * Définit le niveau de cursus pour cette question.
   */
  difficultyLevel: 'pass' | 'las';
  /**
   * Référence précise dans le document source
   */
  sourcePageReference?: string | null;
  /**
   * Cette question a été générée automatiquement par l'IA
   */
  generatedByAI?: boolean | null;
  /**
   * Prompt utilisé pour générer cette question (pour traçabilité)
   */
  aiGenerationPrompt?: string | null;
  /**
   * Cette question a été validée par un expert médical
   */
  validatedByExpert?: boolean | null;
  /**
   * Expert médical qui a validé cette question
   */
  validatedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * Enregistre chaque tentative de quiz par les étudiants.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quiz-submissions".
 */
export interface QuizSubmission {
  id: number;
  quiz: number | Quiz;
  student: number | User;
  submissionDate: string;
  answers?:
    | {
        question: number | Question;
        answer?: string | null;
        isCorrect: boolean;
        id?: string | null;
      }[]
    | null;
  finalScore: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "progress".
 */
export interface Progress {
  id: number;
  user: number | User;
  lesson: number | Lesson;
  status: 'not_started' | 'in_progress' | 'completed';
  score?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Sessions d'étude générées par le Coach IA
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "study-sessions".
 */
export interface StudySession {
  id: number;
  title: string;
  user: number | User;
  status?: ('draft' | 'in-progress' | 'completed' | 'paused') | null;
  /**
   * Durée estimée en minutes pour compléter cette session
   */
  estimatedDuration?: number | null;
  currentStep?: number | null;
  steps?:
    | {
        stepId: number;
        type: 'quiz' | 'review' | 'flashcards' | 'video' | 'reading';
        title: string;
        description?: string | null;
        status?: ('pending' | 'in-progress' | 'completed' | 'skipped') | null;
        /**
         * Données spécifiques au type d'étape
         */
        metadata?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        quiz?: (number | null) | Quiz;
        startedAt?: string | null;
        completedAt?: string | null;
        id?: string | null;
      }[]
    | null;
  context?: {
    course?: (number | null) | Course;
    difficulty?: ('beginner' | 'intermediate' | 'advanced') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Badges attribuables aux utilisateurs (progression, réussite, etc.)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "badges".
 */
export interface Badge {
  id: number;
  name: string;
  description: string;
  /**
   * Icône ou image représentative du badge.
   */
  icon?: (number | null) | Media;
  /**
   * Décris comment obtenir ce badge.
   */
  criteria?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Définit quels rôles peuvent voir ou obtenir ce badge.
   */
  roleVisibility?: ('superadmin' | 'admin' | 'teacher' | 'student')[] | null;
  /**
   * Permet de désactiver un badge sans le supprimer.
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Thèmes de couleurs pour les instances frontend
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "color-schemes".
 */
export interface ColorScheme {
  id: number;
  name: string;
  isDefault?: boolean | null;
  isActive?: boolean | null;
  theme: {
    primary: string;
    secondary: string;
    accent: string;
    background: string;
    text: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscription-plans".
 */
export interface SubscriptionPlan {
  id: number;
  name: string;
  price: number;
  currency?: string | null;
  billingPeriod: 'monthly' | 'yearly';
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  limits?: {
    maxUsers?: number | null;
    maxStorage?: number | null;
    maxCourses?: number | null;
  };
  isActive: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  name: string;
  /**
   * URL slug for the tenant
   */
  slug: string;
  status: 'active' | 'suspended' | 'inactive' | 'trial';
  plan: number | SubscriptionPlan;
  contact: {
    name: string;
    email: string;
    phone?: string | null;
  };
  billing?: {
    address?: string | null;
    vatNumber?: string | null;
    billingEmail?: string | null;
  };
  quotas?: {
    maxUsers?: number | null;
    /**
     * Storage limit in GB
     */
    maxStorage?: number | null;
    maxCourses?: number | null;
  };
  branding?: {
    /**
     * Hex color code
     */
    primaryColor?: string | null;
    customDomain?: string | null;
  };
  settings?: {
    features?: ('analytics' | 'api' | 'certificates' | 'white-label') | null;
  };
  usage?: {
    usersCount?: number | null;
    storageUsed?: number | null;
    lastActivity?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "system-metrics".
 */
export interface SystemMetric {
  id: number;
  /**
   * Date de la mesure
   */
  timestamp: string;
  type: 'usage' | 'quota' | 'incident' | 'custom';
  /**
   * Valeur numérique de la métrique
   */
  value: number;
  description?: string | null;
  tenant?: (number | null) | Tenant;
  /**
   * Détails additionnels (objet JSON libre)
   */
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Historique des conversations avec le coach IA
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conversations".
 */
export interface Conversation {
  id: number;
  title: string;
  user: number | User;
  messages?:
    | {
        role: 'system' | 'user' | 'assistant';
        content: string;
        timestamp: string;
        id?: string | null;
      }[]
    | null;
  context?: {
    course?: (number | null) | Course;
    difficulty?: ('beginner' | 'intermediate' | 'advanced') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "knowledge-base".
 */
export interface KnowledgeBase {
  id: number;
  title: string;
  originalFileName?: string | null;
  documentType: 'pdf' | 'epub' | 'mobi' | 'docx' | 'txt';
  /**
   * Le fichier original (PDF, eBook, etc.)
   */
  sourceFile: number | Media;
  /**
   * Contenu textuel extrait automatiquement du document
   */
  extractedContent?: string | null;
  /**
   * Structure en chapitres du document
   */
  chapters?:
    | {
        chapterTitle: string;
        chapterNumber?: number | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        pageNumbers?: string | null;
        id?: string | null;
      }[]
    | null;
  medicalDomain:
    | 'anatomie'
    | 'physiologie'
    | 'cardiologie'
    | 'neurologie'
    | 'pneumologie'
    | 'gastroenterologie'
    | 'endocrinologie'
    | 'hematologie'
    | 'immunologie'
    | 'pharmacologie'
    | 'pathologie'
    | 'radiologie'
    | 'chirurgie'
    | 'medecine_generale'
    | 'pediatrie'
    | 'gynecologie'
    | 'psychiatrie'
    | 'dermatologie'
    | 'ophtalmologie'
    | 'orl'
    | 'autre';
  speciality?: string | null;
  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';
  authors?:
    | {
        authorName: string;
        id?: string | null;
      }[]
    | null;
  publisher?: string | null;
  publicationYear?: number | null;
  isbn?: string | null;
  edition?: string | null;
  validationStatus: 'pending' | 'approved' | 'rejected' | 'needs_review';
  /**
   * Expert médical qui a validé ce contenu
   */
  validatedBy?: (number | null) | User;
  validationDate?: string | null;
  validationNotes?: string | null;
  /**
   * Score de 1 à 5 étoiles
   */
  qualityScore?: number | null;
  /**
   * Disponible pour la génération de questions par l'IA
   */
  isActive?: boolean | null;
  /**
   * Mots-clés extraits automatiquement par l'IA
   */
  keywords?:
    | {
        keyword: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Version optimisée pour la recherche full-text
   */
  searchableContent?: string | null;
  /**
   * Résumé automatique généré par l'IA
   */
  aiSummary?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  uploadedBy?: (number | null) | User;
  /**
   * Date du dernier traitement automatique
   */
  lastProcessed?: string | null;
  processingStatus: 'queued' | 'extracting' | 'enriching' | 'updating' | 'completed' | 'failed' | 'retrying';
  /**
   * Logs techniques du traitement automatique
   */
  processingLogs?: string | null;
  /**
   * Métriques d'utilisation de ce document
   */
  usageStats?: {
    questionsGenerated?: number | null;
    timesReferenced?: number | null;
    lastUsed?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'subscriptions';
        value: number | Subscription;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'courses';
        value: number | Course;
      } | null)
    | ({
        relationTo: 'lessons';
        value: number | Lesson;
      } | null)
    | ({
        relationTo: 'sections';
        value: number | Section;
      } | null)
    | ({
        relationTo: 'assignments';
        value: number | Assignment;
      } | null)
    | ({
        relationTo: 'prerequisites';
        value: number | Prerequisite;
      } | null)
    | ({
        relationTo: 'quizzes';
        value: number | Quiz;
      } | null)
    | ({
        relationTo: 'questions';
        value: number | Question;
      } | null)
    | ({
        relationTo: 'quiz-submissions';
        value: number | QuizSubmission;
      } | null)
    | ({
        relationTo: 'progress';
        value: number | Progress;
      } | null)
    | ({
        relationTo: 'study-sessions';
        value: number | StudySession;
      } | null)
    | ({
        relationTo: 'badges';
        value: number | Badge;
      } | null)
    | ({
        relationTo: 'color-schemes';
        value: number | ColorScheme;
      } | null)
    | ({
        relationTo: 'subscription-plans';
        value: number | SubscriptionPlan;
      } | null)
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'system-metrics';
        value: number | SystemMetric;
      } | null)
    | ({
        relationTo: 'conversations';
        value: number | Conversation;
      } | null)
    | ({
        relationTo: 'knowledge-base';
        value: number | KnowledgeBase;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  user?: T;
  alt?: T;
  caption?: T;
  extractedContent?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  studyYear?: T;
  onboardingComplete?: T;
  examDate?: T;
  studyProfile?:
    | T
    | {
        targetScore?: T;
        studyHoursPerWeek?: T;
      };
  competencyProfile?: T;
  hasTakenPlacementQuiz?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions_select".
 */
export interface SubscriptionsSelect<T extends boolean = true> {
  user?: T;
  provider?: T;
  customerId?: T;
  subscriptionId?: T;
  productId?: T;
  priceId?: T;
  status?: T;
  trialEnd?: T;
  currentPeriodEnd?: T;
  cancelAtPeriodEnd?: T;
  lastPaymentAt?: T;
  amount?: T;
  currency?: T;
  history?:
    | T
    | {
        type?: T;
        occurredAt?: T;
        raw?: T;
        id?: T;
      };
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  level?: T;
  author?: T;
  published?: T;
  tags?: T;
  duration?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons_select".
 */
export interface LessonsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  course?: T;
  order?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sections_select".
 */
export interface SectionsSelect<T extends boolean = true> {
  title?: T;
  course?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assignments_select".
 */
export interface AssignmentsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  course?: T;
  dueDate?: T;
  submitted?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prerequisites_select".
 */
export interface PrerequisitesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quizzes_select".
 */
export interface QuizzesSelect<T extends boolean = true> {
  title?: T;
  quizType?: T;
  description?: T;
  questions?: T;
  course?: T;
  published?: T;
  duration?: T;
  passingScore?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions_select".
 */
export interface QuestionsSelect<T extends boolean = true> {
  questionText?: T;
  questionType?: T;
  options?:
    | T
    | {
        optionText?: T;
        isCorrect?: T;
        id?: T;
      };
  explanation?: T;
  course?: T;
  category?: T;
  difficultyLevel?: T;
  sourcePageReference?: T;
  generatedByAI?: T;
  aiGenerationPrompt?: T;
  validatedByExpert?: T;
  validatedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quiz-submissions_select".
 */
export interface QuizSubmissionsSelect<T extends boolean = true> {
  quiz?: T;
  student?: T;
  submissionDate?: T;
  answers?:
    | T
    | {
        question?: T;
        answer?: T;
        isCorrect?: T;
        id?: T;
      };
  finalScore?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "progress_select".
 */
export interface ProgressSelect<T extends boolean = true> {
  user?: T;
  lesson?: T;
  status?: T;
  score?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "study-sessions_select".
 */
export interface StudySessionsSelect<T extends boolean = true> {
  title?: T;
  user?: T;
  status?: T;
  estimatedDuration?: T;
  currentStep?: T;
  steps?:
    | T
    | {
        stepId?: T;
        type?: T;
        title?: T;
        description?: T;
        status?: T;
        metadata?: T;
        quiz?: T;
        startedAt?: T;
        completedAt?: T;
        id?: T;
      };
  context?:
    | T
    | {
        course?: T;
        difficulty?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "badges_select".
 */
export interface BadgesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  icon?: T;
  criteria?: T;
  roleVisibility?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "color-schemes_select".
 */
export interface ColorSchemesSelect<T extends boolean = true> {
  name?: T;
  isDefault?: T;
  isActive?: T;
  theme?:
    | T
    | {
        primary?: T;
        secondary?: T;
        accent?: T;
        background?: T;
        text?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscription-plans_select".
 */
export interface SubscriptionPlansSelect<T extends boolean = true> {
  name?: T;
  price?: T;
  currency?: T;
  billingPeriod?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  limits?:
    | T
    | {
        maxUsers?: T;
        maxStorage?: T;
        maxCourses?: T;
      };
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  status?: T;
  plan?: T;
  contact?:
    | T
    | {
        name?: T;
        email?: T;
        phone?: T;
      };
  billing?:
    | T
    | {
        address?: T;
        vatNumber?: T;
        billingEmail?: T;
      };
  quotas?:
    | T
    | {
        maxUsers?: T;
        maxStorage?: T;
        maxCourses?: T;
      };
  branding?:
    | T
    | {
        primaryColor?: T;
        customDomain?: T;
      };
  settings?:
    | T
    | {
        features?: T;
      };
  usage?:
    | T
    | {
        usersCount?: T;
        storageUsed?: T;
        lastActivity?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "system-metrics_select".
 */
export interface SystemMetricsSelect<T extends boolean = true> {
  timestamp?: T;
  type?: T;
  value?: T;
  description?: T;
  tenant?: T;
  details?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conversations_select".
 */
export interface ConversationsSelect<T extends boolean = true> {
  title?: T;
  user?: T;
  messages?:
    | T
    | {
        role?: T;
        content?: T;
        timestamp?: T;
        id?: T;
      };
  context?:
    | T
    | {
        course?: T;
        difficulty?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "knowledge-base_select".
 */
export interface KnowledgeBaseSelect<T extends boolean = true> {
  title?: T;
  originalFileName?: T;
  documentType?: T;
  sourceFile?: T;
  extractedContent?: T;
  chapters?:
    | T
    | {
        chapterTitle?: T;
        chapterNumber?: T;
        content?: T;
        pageNumbers?: T;
        id?: T;
      };
  medicalDomain?: T;
  speciality?: T;
  difficulty?: T;
  authors?:
    | T
    | {
        authorName?: T;
        id?: T;
      };
  publisher?: T;
  publicationYear?: T;
  isbn?: T;
  edition?: T;
  validationStatus?: T;
  validatedBy?: T;
  validationDate?: T;
  validationNotes?: T;
  qualityScore?: T;
  isActive?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  searchableContent?: T;
  aiSummary?: T;
  uploadedBy?: T;
  lastProcessed?: T;
  processingStatus?: T;
  processingLogs?: T;
  usageStats?:
    | T
    | {
        questionsGenerated?: T;
        timesReferenced?: T;
        lastUsed?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Configuration des accès CORS (Cross-Origin Resource Sharing)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cors-config".
 */
export interface CorsConfig {
  id: number;
  /**
   * Liste des URLs qui peuvent accéder à l'API
   */
  allowedOrigins?:
    | {
        /**
         * URL complète (ex: https://monsite.com)
         */
        url: string;
        /**
         * Description pour identifier l'usage
         */
        description?: string | null;
        /**
         * Activer/désactiver cette origine
         */
        isActive?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * En-têtes HTTP supplémentaires à autoriser
   */
  customHeaders?:
    | {
        /**
         * Nom de l'en-tête (ex: x-custom-header)
         */
        header: string;
        /**
         * Description de l'usage de cet en-tête
         */
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Environnement actif
   */
  environment: 'development' | 'production';
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cors-config_select".
 */
export interface CorsConfigSelect<T extends boolean = true> {
  allowedOrigins?:
    | T
    | {
        url?: T;
        description?: T;
        isActive?: T;
        id?: T;
      };
  customHeaders?:
    | T
    | {
        header?: T;
        description?: T;
        id?: T;
      };
  environment?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}