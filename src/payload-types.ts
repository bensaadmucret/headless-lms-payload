/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    users: User;
    subscriptions: Subscription;
    'webhook-retry-queue': WebhookRetryQueue;
    categories: Category;
    courses: Course;
    lessons: Lesson;
    sections: Section;
    assignments: Assignment;
    prerequisites: Prerequisite;
    quizzes: Quiz;
    questions: Question;
    'quiz-submissions': QuizSubmission;
    progress: Progress;
    'study-sessions': StudySession;
    badges: Badge;
    'color-schemes': ColorScheme;
    'subscription-plans': SubscriptionPlan;
    tenants: Tenant;
    'system-metrics': SystemMetric;
    conversations: Conversation;
    adaptiveQuizSessions: AdaptiveQuizSession;
    adaptiveQuizResults: AdaptiveQuizResult;
    'user-performances': UserPerformance;
    auditlogs: Auditlog;
    generationlogs: Generationlog;
    'import-jobs': ImportJob;
    flashcards: Flashcard;
    'flashcard-decks': FlashcardDeck;
    'learning-paths': LearningPath;
    'learning-path-steps': LearningPathStep;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    subscriptions: SubscriptionsSelect<false> | SubscriptionsSelect<true>;
    'webhook-retry-queue': WebhookRetryQueueSelect<false> | WebhookRetryQueueSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    lessons: LessonsSelect<false> | LessonsSelect<true>;
    sections: SectionsSelect<false> | SectionsSelect<true>;
    assignments: AssignmentsSelect<false> | AssignmentsSelect<true>;
    prerequisites: PrerequisitesSelect<false> | PrerequisitesSelect<true>;
    quizzes: QuizzesSelect<false> | QuizzesSelect<true>;
    questions: QuestionsSelect<false> | QuestionsSelect<true>;
    'quiz-submissions': QuizSubmissionsSelect<false> | QuizSubmissionsSelect<true>;
    progress: ProgressSelect<false> | ProgressSelect<true>;
    'study-sessions': StudySessionsSelect<false> | StudySessionsSelect<true>;
    badges: BadgesSelect<false> | BadgesSelect<true>;
    'color-schemes': ColorSchemesSelect<false> | ColorSchemesSelect<true>;
    'subscription-plans': SubscriptionPlansSelect<false> | SubscriptionPlansSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    'system-metrics': SystemMetricsSelect<false> | SystemMetricsSelect<true>;
    conversations: ConversationsSelect<false> | ConversationsSelect<true>;
    adaptiveQuizSessions: AdaptiveQuizSessionsSelect<false> | AdaptiveQuizSessionsSelect<true>;
    adaptiveQuizResults: AdaptiveQuizResultsSelect<false> | AdaptiveQuizResultsSelect<true>;
    'user-performances': UserPerformancesSelect<false> | UserPerformancesSelect<true>;
    auditlogs: AuditlogsSelect<false> | AuditlogsSelect<true>;
    generationlogs: GenerationlogsSelect<false> | GenerationlogsSelect<true>;
    'import-jobs': ImportJobsSelect<false> | ImportJobsSelect<true>;
    flashcards: FlashcardsSelect<false> | FlashcardsSelect<true>;
    'flashcard-decks': FlashcardDecksSelect<false> | FlashcardDecksSelect<true>;
    'learning-paths': LearningPathsSelect<false> | LearningPathsSelect<true>;
    'learning-path-steps': LearningPathStepsSelect<false> | LearningPathStepsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'cors-config': CorsConfig;
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    'cors-config': CorsConfigSelect<false> | CorsConfigSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      'process-webhook-retry-queue': ProcessWebhookRetryQueue;
      'cleanup-webhook-retry-queue': CleanupWebhookRetryQueue;
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  user: number | User;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Contenu textuel extrait automatiquement du document
   */
  extractedContent?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  /**
   * Le cursus actuel de l’étudiant.
   */
  studyYear?: ('pass' | 'las') | null;
  /**
   * Indique si l’étudiant a terminé le parcours d’intégration.
   */
  onboardingComplete?: boolean | null;
  /**
   * Permet au coach de calibrer le plan d'étude.
   */
  examDate?: string | null;
  /**
   * Objectifs et préférences de l'étudiant pour personnaliser son coaching.
   */
  studyProfile?: {
    targetScore?: number | null;
    studyHoursPerWeek?: number | null;
  };
  /**
   * Stocke les scores de compétence par matière. Mis à jour par le coach IA.
   */
  competencyProfile?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Indique si l’étudiant a passé le quiz de positionnement
   */
  hasTakenPlacementQuiz?: boolean | null;
  role: 'superadmin' | 'admin' | 'teacher' | 'student';
  subscription_status?: string | null;
  /**
   * Statut actuel de l'abonnement Premium
   */
  subscriptionStatus?: ('none' | 'trialing' | 'active' | 'past_due' | 'canceled') | null;
  /**
   * Date de fin de la période d'abonnement actuelle
   */
  subscriptionEndDate?: string | null;
  /**
   * ID du client Stripe
   */
  stripeCustomerId?: string | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * Catégorie parent pour hiérarchie
   */
  parentCategory?: (number | null) | Category;
  /**
   * Niveau d'études ciblé par cette catégorie
   */
  level: 'PASS' | 'LAS' | 'both';
  /**
   * Configuration pour les quiz adaptatifs
   */
  adaptiveSettings?: {
    /**
     * Inclure cette catégorie dans l'analyse adaptative
     */
    isActive?: boolean | null;
    /**
     * Nombre minimum de questions requises pour l'analyse
     */
    minimumQuestions?: number | null;
    /**
     * Poids dans l'algorithme de sélection (1 = normal)
     */
    weight?: number | null;
  };
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Instances d'abonnements (Stripe/Paddle) rattachées aux utilisateurs.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions".
 */
export interface Subscription {
  id: number;
  user: number | User;
  /**
   * Fournisseur de paiement (Stripe par défaut)
   */
  provider: 'paddle' | 'stripe';
  /**
   * Identifiant client du fournisseur (Stripe Customer ID ou Paddle Customer ID)
   */
  customerId?: string | null;
  /**
   * Identifiant d'abonnement unique du fournisseur
   */
  subscriptionId: string;
  /**
   * Identifiant du prix du fournisseur
   */
  priceId?: string | null;
  status: 'trialing' | 'active' | 'past_due' | 'canceled';
  /**
   * Fin de période d'essai
   */
  trialEnd?: string | null;
  /**
   * Fin de la période de facturation en cours
   */
  currentPeriodEnd?: string | null;
  /**
   * Annulation à la fin de la période en cours
   */
  cancelAtPeriodEnd?: boolean | null;
  /**
   * Date du dernier paiement réussi
   */
  lastPaymentAt?: string | null;
  /**
   * Montant en plus petite unité (ex: centimes)
   */
  amount?: number | null;
  /**
   * Devise (EUR par défaut)
   */
  currency?: string | null;
  /**
   * Historique des événements webhook liés à cet abonnement
   */
  history?:
    | {
        type:
          | 'subscription_created'
          | 'payment_succeeded'
          | 'subscription_updated'
          | 'payment_failed'
          | 'subscription_canceled';
        occurredAt: string;
        /**
         * Payload d'événement (sanitisé/tronqué si nécessaire)
         */
        raw?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Clés/valeurs additionnelles (optionnel)
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * File de réessai pour les webhooks Stripe échoués
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webhook-retry-queue".
 */
export interface WebhookRetryQueue {
  id: number;
  /**
   * Identifiant unique de l'événement Stripe
   */
  eventId: string;
  /**
   * Type d'événement webhook (ex: customer.subscription.created)
   */
  eventType: string;
  /**
   * Données complètes de l'événement webhook
   */
  payload:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Nombre de fois que le traitement a été tenté
   */
  retryCount?: number | null;
  /**
   * Nombre maximum de réessais avant échec définitif
   */
  maxRetries?: number | null;
  /**
   * Message d'erreur du dernier échec de traitement
   */
  lastError?: string | null;
  /**
   * Statut actuel du traitement
   */
  status?: ('pending' | 'processing' | 'success' | 'failed') | null;
  /**
   * Date et heure du prochain réessai
   */
  nextRetryAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: number;
  title: string;
  description: string;
  level: 'beginner' | 'intermediate' | 'advanced';
  author: number | User;
  published?: boolean | null;
  tags?: string | null;
  duration?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons".
 */
export interface Lesson {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  course: number | Course;
  order: number;
  published?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sections".
 */
export interface Section {
  id: number;
  title: string;
  course: number | Course;
  order: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assignments".
 */
export interface Assignment {
  id: number;
  title: string;
  description?: string | null;
  course: number | Course;
  dueDate?: string | null;
  submitted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prerequisites".
 */
export interface Prerequisite {
  id: number;
  name: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quizzes".
 */
export interface Quiz {
  id: number;
  title: string;
  /**
   * Définit le rôle de ce quiz dans le parcours de l'étudiant.
   */
  quizType?: ('standard' | 'placement') | null;
  /**
   * Description détaillée du quiz
   */
  description?: string | null;
  /**
   * Sélectionnez les questions à inclure dans ce quiz
   */
  questions: (number | Question)[];
  /**
   * Cours auquel ce quiz est associé (optionnel)
   */
  course?: (number | null) | Course;
  /**
   * Définir si le quiz est visible pour les utilisateurs
   */
  published?: boolean | null;
  /**
   * Durée estimée pour terminer le quiz (en minutes)
   */
  duration?: number | null;
  /**
   * Score minimum requis pour réussir le quiz (en pourcentage)
   */
  passingScore?: number | null;
  /**
   * Statut de validation par les experts
   */
  validationStatus?: ('draft' | 'pending_review' | 'approved' | 'rejected') | null;
  /**
   * Commentaires et notes des experts lors de la validation
   */
  validationNotes?: string | null;
  /**
   * Expert qui a validé ce quiz
   */
  validatedBy?: string | null;
  /**
   * Date de validation par l'expert
   */
  validatedAt?: string | null;
  /**
   * Ce quiz a été généré automatiquement par l'IA
   */
  generatedByAI?: boolean | null;
  aiGenerationMetadata?: {
    generationTime?: number | null;
    validationScore?: number | null;
    aiModel?: string | null;
    sourcePrompt?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Notre banque centrale de questions pour tous les quiz et sessions d'étude.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions".
 */
export interface Question {
  id: number;
  questionText: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  questionType: 'multipleChoice';
  /**
   * Définissez les options pour le QCM et cochez la bonne réponse.
   */
  options?:
    | {
        optionText: string;
        isCorrect?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Cette explication s'affichera à l'étudiant après qu'il ait répondu. Champ temporairement en texte simple pour débogage.
   */
  explanation: string;
  course?: (number | null) | Course;
  category: number | Category;
  /**
   * Niveau de difficulté pour la sélection adaptative
   */
  difficulty: 'easy' | 'medium' | 'hard';
  /**
   * Niveau d'études ciblé par cette question
   */
  studentLevel: 'PASS' | 'LAS' | 'both';
  /**
   * Tags pour filtrage et recherche avancée
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Métadonnées spécifiques aux quiz adaptatifs
   */
  adaptiveMetadata?: {
    /**
     * Temps moyen de réponse en secondes
     */
    averageTimeSeconds?: number | null;
    /**
     * Taux de réussite global (0-1)
     */
    successRate?: number | null;
    /**
     * Nombre de fois utilisée dans des quiz adaptatifs
     */
    timesUsed?: number | null;
  };
  /**
   * Référence précise dans le document source
   */
  sourcePageReference?: string | null;
  /**
   * Cette question a été générée automatiquement par l'IA
   */
  generatedByAI?: boolean | null;
  /**
   * Prompt utilisé pour générer cette question (pour traçabilité)
   */
  aiGenerationPrompt?: string | null;
  /**
   * Cette question a été validée par un expert médical
   */
  validatedByExpert?: boolean | null;
  /**
   * Expert médical qui a validé cette question
   */
  validatedBy?: (number | null) | User;
  /**
   * Statut de validation par les experts
   */
  validationStatus?: ('pending' | 'approved' | 'rejected' | 'needs_review') | null;
  /**
   * Commentaires et notes des experts lors de la validation
   */
  validationNotes?: string | null;
  /**
   * Date de validation par l'expert
   */
  validatedAt?: string | null;
  /**
   * Date de dernière régénération IA
   */
  regeneratedAt?: string | null;
  /**
   * Raison de la dernière régénération
   */
  regenerationReason?: string | null;
  /**
   * Score de qualité attribué par l'IA (0-100)
   */
  qualityScore?: number | null;
  /**
   * Problèmes détectés lors de la validation automatique
   */
  validationIssues?:
    | {
        issue: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Enregistre chaque tentative de quiz par les étudiants.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quiz-submissions".
 */
export interface QuizSubmission {
  id: number;
  quiz: number | Quiz;
  student: number | User;
  submissionDate: string;
  answers?:
    | {
        question: number | Question;
        answer?: string | null;
        isCorrect: boolean;
        id?: string | null;
      }[]
    | null;
  finalScore: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "progress".
 */
export interface Progress {
  id: number;
  user: number | User;
  lesson: number | Lesson;
  status: 'not_started' | 'in_progress' | 'completed';
  score?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Sessions d'étude générées par le Coach IA
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "study-sessions".
 */
export interface StudySession {
  id: number;
  title: string;
  user: number | User;
  status?: ('draft' | 'in-progress' | 'completed' | 'paused') | null;
  /**
   * Durée estimée en minutes pour compléter cette session
   */
  estimatedDuration?: number | null;
  currentStep?: number | null;
  steps?:
    | {
        stepId: number;
        type: 'quiz' | 'review' | 'flashcards' | 'video' | 'reading';
        title: string;
        description?: string | null;
        status?: ('pending' | 'in-progress' | 'completed' | 'skipped') | null;
        /**
         * Données spécifiques au type d'étape
         */
        metadata?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        quiz?: (number | null) | Quiz;
        startedAt?: string | null;
        completedAt?: string | null;
        id?: string | null;
      }[]
    | null;
  context?: {
    course?: (number | null) | Course;
    difficulty?: ('beginner' | 'intermediate' | 'advanced') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Badges attribuables aux utilisateurs (progression, réussite, etc.)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "badges".
 */
export interface Badge {
  id: number;
  name: string;
  description: string;
  /**
   * Icône ou image représentative du badge.
   */
  icon?: (number | null) | Media;
  /**
   * Décris comment obtenir ce badge.
   */
  criteria?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Définit quels rôles peuvent voir ou obtenir ce badge.
   */
  roleVisibility?: ('superadmin' | 'admin' | 'teacher' | 'student')[] | null;
  /**
   * Permet de désactiver un badge sans le supprimer.
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Thèmes de couleurs pour les instances frontend
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "color-schemes".
 */
export interface ColorScheme {
  id: number;
  name: string;
  isDefault?: boolean | null;
  isActive?: boolean | null;
  theme: {
    primary: string;
    secondary: string;
    accent: string;
    background: string;
    text: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscription-plans".
 */
export interface SubscriptionPlan {
  id: number;
  /**
   * Nom du plan (ex: MedCoach IA, Premium)
   */
  name: string;
  /**
   * Description courte du plan (ex: Coach IA personnel complet)
   */
  description: string;
  price: {
    /**
     * Prix en euros par mois
     */
    monthly: number;
    /**
     * Prix en euros par an
     */
    yearly: number;
  };
  /**
   * Devise (EUR, USD, etc.)
   */
  currency?: string | null;
  /**
   * Liste des fonctionnalités incluses dans ce plan
   */
  features: {
    feature: string;
    id?: string | null;
  }[];
  /**
   * Liste des limitations de ce plan (optionnel)
   */
  limitations?:
    | {
        limitation?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Afficher le badge "Recommandé" sur ce plan
   */
  highlighted?: boolean | null;
  /**
   * Texte affiché sur le bouton d'action (ex: Essai gratuit 30 jours)
   */
  ctaLabel: string;
  /**
   * URL de destination du bouton (ex: /onboarding)
   */
  ctaHref: string;
  /**
   * Limites techniques du plan (pour usage interne)
   */
  limits?: {
    maxUsers?: number | null;
    maxStorage?: number | null;
    maxCourses?: number | null;
  };
  /**
   * Afficher ce plan sur le site
   */
  isActive: boolean;
  /**
   * Ordre d'affichage sur la page (0 = premier)
   */
  displayOrder?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: number;
  name: string;
  /**
   * URL slug for the tenant
   */
  slug: string;
  status: 'active' | 'suspended' | 'inactive' | 'trial';
  plan: number | SubscriptionPlan;
  contact: {
    name: string;
    email: string;
    phone?: string | null;
  };
  billing?: {
    address?: string | null;
    vatNumber?: string | null;
    billingEmail?: string | null;
  };
  quotas?: {
    maxUsers?: number | null;
    /**
     * Storage limit in GB
     */
    maxStorage?: number | null;
    maxCourses?: number | null;
  };
  branding?: {
    /**
     * Hex color code
     */
    primaryColor?: string | null;
    customDomain?: string | null;
  };
  settings?: {
    features?: ('analytics' | 'api' | 'certificates' | 'white-label') | null;
  };
  usage?: {
    usersCount?: number | null;
    storageUsed?: number | null;
    lastActivity?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "system-metrics".
 */
export interface SystemMetric {
  id: number;
  /**
   * Date de la mesure
   */
  timestamp: string;
  type: 'usage' | 'quota' | 'incident' | 'custom';
  /**
   * Valeur numérique de la métrique
   */
  value: number;
  description?: string | null;
  tenant?: (number | null) | Tenant;
  /**
   * Détails additionnels (objet JSON libre)
   */
  details?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Historique des conversations avec le coach IA
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conversations".
 */
export interface Conversation {
  id: number;
  title: string;
  user: number | User;
  messages?:
    | {
        role: 'system' | 'user' | 'assistant';
        content: string;
        timestamp: string;
        id?: string | null;
      }[]
    | null;
  context?: {
    course?: (number | null) | Course;
    difficulty?: ('beginner' | 'intermediate' | 'advanced') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Sessions de quiz adaptatifs générées pour les étudiants
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "adaptiveQuizSessions".
 */
export interface AdaptiveQuizSession {
  id: number;
  /**
   * Identifiant unique généré automatiquement
   */
  sessionId: string;
  user: number | User;
  /**
   * Questions sélectionnées pour ce quiz adaptatif
   */
  questions: (number | Question)[];
  status: 'active' | 'completed' | 'abandoned' | 'expired';
  /**
   * Données d'analyse ayant servi à générer ce quiz
   */
  basedOnAnalytics: {
    /**
     * Catégories identifiées comme faibles
     */
    weakCategories?: (number | Category)[] | null;
    /**
     * Catégories identifiées comme fortes
     */
    strongCategories?: (number | Category)[] | null;
    /**
     * Date de l'analyse des performances
     */
    analysisDate: string;
    /**
     * Taux de réussite global de l'étudiant
     */
    overallSuccessRate?: number | null;
    /**
     * Nombre de quiz pris en compte dans l'analyse
     */
    totalQuizzesAnalyzed?: number | null;
  };
  /**
   * Répartition des questions dans ce quiz
   */
  questionDistribution: {
    /**
     * Nombre de questions des catégories faibles
     */
    weakCategoryQuestions: number;
    /**
     * Nombre de questions des catégories fortes
     */
    strongCategoryQuestions: number;
    /**
     * Nombre total de questions
     */
    totalQuestions: number;
  };
  /**
   * Configuration utilisée pour générer ce quiz
   */
  config?: {
    /**
     * Nombre cible de questions des catégories faibles
     */
    weakQuestionsCount?: number | null;
    /**
     * Nombre cible de questions des catégories fortes
     */
    strongQuestionsCount?: number | null;
    /**
     * Taux de réussite cible pour ce quiz
     */
    targetSuccessRate?: number | null;
  };
  /**
   * Niveau d'études de l'étudiant
   */
  studentLevel: 'PASS' | 'LAS';
  /**
   * Date d'expiration de cette session
   */
  expiresAt?: string | null;
  /**
   * Nombre total de questions (calculé automatiquement)
   */
  questionsCount?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Résultats détaillés des quiz adaptatifs
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "adaptiveQuizResults".
 */
export interface AdaptiveQuizResult {
  id: number;
  session: number | AdaptiveQuizSession;
  user: number | User;
  /**
   * Score total obtenu
   */
  overallScore: number;
  /**
   * Score maximum possible
   */
  maxScore: number;
  /**
   * Taux de réussite (0-1)
   */
  successRate: number;
  /**
   * Temps total passé en secondes
   */
  timeSpent: number;
  /**
   * Date et heure de completion
   */
  completedAt: string;
  /**
   * Résultats détaillés par catégorie
   */
  categoryResults?:
    | {
        category: number | Category;
        /**
         * Nombre de questions dans cette catégorie
         */
        questionsCount: number;
        /**
         * Nombre de réponses correctes
         */
        correctAnswers: number;
        /**
         * Nombre de réponses incorrectes
         */
        incorrectAnswers: number;
        /**
         * Taux de réussite pour cette catégorie
         */
        successRate: number;
        /**
         * Amélioration par rapport aux performances précédentes
         */
        scoreImprovement?: number | null;
        /**
         * Taux de réussite précédent dans cette catégorie
         */
        previousSuccessRate?: number | null;
        /**
         * Temps moyen par question en secondes
         */
        averageTimePerQuestion?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Recommandations personnalisées générées
   */
  recommendations?:
    | {
        /**
         * Identifiant unique de la recommandation
         */
        recommendationId: string;
        type: 'study_more' | 'practice_quiz' | 'review_material' | 'focus_category' | 'maintain_strength';
        category: number | Category;
        /**
         * Message de recommandation pour l'étudiant
         */
        message: string;
        priority: 'high' | 'medium' | 'low';
        /**
         * URL vers l'action recommandée
         */
        actionUrl?: string | null;
        /**
         * Temps estimé pour suivre cette recommandation
         */
        estimatedTimeMinutes?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Comparaison avec les performances précédentes
   */
  progressComparison?: {
    /**
     * Score moyen des quiz précédents
     */
    previousAverageScore?: number | null;
    /**
     * Score de ce quiz
     */
    currentScore?: number | null;
    /**
     * Amélioration (peut être négative)
     */
    improvement?: number | null;
    trend?: ('improving' | 'stable' | 'declining') | null;
    /**
     * Nombre de jours consécutifs de quiz
     */
    streakDays?: number | null;
    /**
     * Date du dernier quiz avant celui-ci
     */
    lastQuizDate?: string | null;
  };
  /**
   * Prochaine disponibilité pour un quiz adaptatif (cooldown)
   */
  nextAdaptiveQuizAvailableAt?: string | null;
  /**
   * Domaines nécessitant une amélioration
   */
  improvementAreas?:
    | {
        categoryName: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Domaines de force de l'étudiant
   */
  strengthAreas?:
    | {
        categoryName: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Métriques de performance pré-calculées pour chaque utilisateur
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-performances".
 */
export interface UserPerformance {
  id: number;
  /**
   * Utilisateur associé à ces métriques de performance
   */
  user: number | User;
  /**
   * Taux de réussite global (0-1)
   */
  overallSuccessRate: number;
  /**
   * Nombre total de quiz complétés par l'utilisateur
   */
  totalQuizzesTaken: number;
  /**
   * Nombre total de questions auxquelles l'utilisateur a répondu
   */
  totalQuestionsAnswered: number;
  /**
   * Détails des performances pour chaque catégorie
   */
  categoryPerformances: {
    categoryId: string;
    categoryName: string;
    totalQuestions: number;
    correctAnswers: number;
    successRate: number;
    lastAttemptDate: string;
    questionsAttempted: number;
    averageTimePerQuestion?: number | null;
    id?: string | null;
  }[];
  /**
   * Les 3 catégories avec les taux de réussite les plus bas
   */
  weakestCategories?:
    | {
        categoryId: string;
        categoryName: string;
        successRate: number;
        id?: string | null;
      }[]
    | null;
  /**
   * Les 3 catégories avec les taux de réussite les plus élevés
   */
  strongestCategories?:
    | {
        categoryId: string;
        categoryName: string;
        successRate: number;
        id?: string | null;
      }[]
    | null;
  /**
   * Date de la dernière mise à jour des métriques
   */
  lastUpdated: string;
  /**
   * Date à laquelle l'analyse a été effectuée
   */
  analysisDate: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Historique des modifications et actions importantes du système.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auditlogs".
 */
export interface Auditlog {
  id: number;
  user: number | User;
  action: string;
  collection: string;
  documentId?: string | null;
  /**
   * Contient l’état avant/après si pertinent.
   */
  diff?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  timestamp: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * Logs détaillés de toutes les générations de quiz par IA avec métriques de performance.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "generationlogs".
 */
export interface Generationlog {
  id: number;
  user: number | User;
  action:
    | 'ai_quiz_generation'
    | 'ai_questions_generation'
    | 'ai_content_validation'
    | 'auto_quiz_creation'
    | 'generation_retry'
    | 'generation_failure';
  status: 'started' | 'in_progress' | 'success' | 'failed' | 'cancelled' | 'timeout';
  generationConfig?: {
    subject?: string | null;
    categoryId?: string | null;
    categoryName?: string | null;
    studentLevel?: ('PASS' | 'LAS' | 'both') | null;
    questionCount?: number | null;
    difficulty?: ('easy' | 'medium' | 'hard') | null;
    medicalDomain?: string | null;
    includeExplanations?: boolean | null;
    customInstructions?: string | null;
  };
  result?: {
    quizId?: string | null;
    questionIds?:
      | {
          questionId?: string | null;
          id?: string | null;
        }[]
      | null;
    questionsCreated?: number | null;
    /**
     * Score de qualité du contenu généré (0-100)
     */
    validationScore?: number | null;
    aiModel?: string | null;
    /**
     * Fournisseur d'IA qui a traité la requête
     */
    aiProvider?: ('code-supernova' | 'google-gemini' | 'openai-gpt' | 'local') | null;
    tokensUsed?: number | null;
  };
  error?: {
    type?:
      | (
          | 'ai_api_error'
          | 'validation_failed'
          | 'database_error'
          | 'rate_limit_exceeded'
          | 'invalid_config'
          | 'timeout'
          | 'unknown_error'
        )
      | null;
    message?: string | null;
    /**
     * Détails techniques de l'erreur pour le débogage
     */
    details?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    stackTrace?: string | null;
  };
  performance?: {
    /**
     * Durée totale de la génération en millisecondes
     */
    duration?: number | null;
    aiResponseTime?: number | null;
    validationTime?: number | null;
    databaseTime?: number | null;
    retryCount?: number | null;
    promptLength?: number | null;
    responseLength?: number | null;
  };
  metadata?: {
    ipAddress?: string | null;
    userAgent?: string | null;
    sessionId?: string | null;
    requestId?: string | null;
    environment?: ('development' | 'test' | 'staging' | 'production') | null;
    version?: string | null;
  };
  createdAt: string;
  completedAt?: string | null;
  updatedAt: string;
}
/**
 * Gestion des imports massifs de quiz, questions et flashcards depuis fichiers JSON/CSV
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "import-jobs".
 */
export interface ImportJob {
  id: number;
  /**
   * Fichier JSON ou CSV contenant les données à importer
   */
  uploadedFile: number | Media;
  /**
   * Nom original du fichier uploadé (auto-rempli si vide)
   */
  fileName?: string | null;
  /**
   * Type de contenu à importer
   */
  importType: 'questions' | 'quizzes' | 'flashcards' | 'learning-path';
  status: 'pending' | 'validating' | 'validated' | 'processing' | 'completed' | 'failed' | 'validation_failed';
  /**
   * Progression du traitement (0-100%)
   */
  progress?: number | null;
  uploadedBy: number | User;
  /**
   * Pour les questions isolées : créer automatiquement un quiz qui les regroupe
   */
  createQuizContainer?: boolean | null;
  quizMetadata?: {
    title?: string | null;
    description?: string | null;
    category?: (number | null) | Category;
  };
  /**
   * Erreurs et avertissements détectés lors de la validation
   */
  validationResults?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Détails des entités créées (questions, quiz, etc.)
   */
  processingResults?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  errors?:
    | {
        type?: ('validation' | 'database' | 'mapping' | 'reference' | 'system') | null;
        severity?: ('critical' | 'major' | 'minor' | 'warning') | null;
        message?: string | null;
        itemIndex?: number | null;
        id?: string | null;
      }[]
    | null;
  completedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Cartes de révision pour l'apprentissage actif et la mémorisation
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flashcards".
 */
export interface Flashcard {
  id: number;
  /**
   * Question ou concept clé à mémoriser
   */
  front: string;
  /**
   * Explication détaillée ou réponse complète
   */
  back: string;
  /**
   * Indices optionnels pour faciliter la mémorisation
   */
  hints?:
    | {
        hint: string;
        id?: string | null;
      }[]
    | null;
  category: number | Category;
  difficulty: 'easy' | 'medium' | 'hard';
  level: 'PASS' | 'LAS' | 'both';
  /**
   * Tags pour filtrage et recherche
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Deck auquel appartient cette flashcard
   */
  deck?: (number | null) | FlashcardDeck;
  /**
   * URL d'une image illustrative (optionnel)
   */
  imageUrl?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Decks de flashcards pour organiser les cartes de révision
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flashcard-decks".
 */
export interface FlashcardDeck {
  id: number;
  deckName: string;
  /**
   * Description du contenu du deck
   */
  description?: string | null;
  category: number | Category;
  level: 'PASS' | 'LAS' | 'both';
  difficulty?: ('easy' | 'medium' | 'hard') | null;
  /**
   * Calculé automatiquement
   */
  cardCount?: number | null;
  author?: string | null;
  /**
   * Source du contenu (faculté, livre, etc.)
   */
  source?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Parcours d'apprentissage structurés avec étapes progressives
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "learning-paths".
 */
export interface LearningPath {
  id: number;
  title: string;
  /**
   * Description générale du parcours d'apprentissage
   */
  description: string;
  level: 'PASS' | 'LAS' | 'both';
  difficulty: 'easy' | 'medium' | 'hard';
  /**
   * Durée totale estimée en minutes
   */
  estimatedDuration: number;
  stepCount?: number | null;
  /**
   * Connaissances requises avant de commencer
   */
  prerequisites?:
    | {
        prerequisite: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Objectifs à atteindre à la fin du parcours
   */
  objectives?:
    | {
        objective: string;
        id?: string | null;
      }[]
    | null;
  author?: string | null;
  source?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Étapes individuelles des parcours d'apprentissage
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "learning-path-steps".
 */
export interface LearningPathStep {
  id: number;
  learningPath: number | LearningPath;
  /**
   * Identifiant unique de l'étape dans le parcours
   */
  stepId: string;
  title: string;
  /**
   * Description détaillée de l'étape
   */
  description?: string | null;
  /**
   * Position de l'étape dans le parcours (commence à 1)
   */
  order: number;
  /**
   * Durée estimée pour compléter cette étape
   */
  estimatedTime: number;
  difficulty: 'easy' | 'medium' | 'hard';
  /**
   * IDs des étapes qui doivent être complétées avant celle-ci
   */
  prerequisites?:
    | {
        stepId: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Objectifs spécifiques à cette étape
   */
  objectives?:
    | {
        objective: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Questions pour valider les connaissances de cette étape
   */
  questions?: (number | Question)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'process-webhook-retry-queue' | 'cleanup-webhook-retry-queue' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'process-webhook-retry-queue' | 'cleanup-webhook-retry-queue' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'subscriptions';
        value: number | Subscription;
      } | null)
    | ({
        relationTo: 'webhook-retry-queue';
        value: number | WebhookRetryQueue;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'courses';
        value: number | Course;
      } | null)
    | ({
        relationTo: 'lessons';
        value: number | Lesson;
      } | null)
    | ({
        relationTo: 'sections';
        value: number | Section;
      } | null)
    | ({
        relationTo: 'assignments';
        value: number | Assignment;
      } | null)
    | ({
        relationTo: 'prerequisites';
        value: number | Prerequisite;
      } | null)
    | ({
        relationTo: 'quizzes';
        value: number | Quiz;
      } | null)
    | ({
        relationTo: 'questions';
        value: number | Question;
      } | null)
    | ({
        relationTo: 'quiz-submissions';
        value: number | QuizSubmission;
      } | null)
    | ({
        relationTo: 'progress';
        value: number | Progress;
      } | null)
    | ({
        relationTo: 'study-sessions';
        value: number | StudySession;
      } | null)
    | ({
        relationTo: 'badges';
        value: number | Badge;
      } | null)
    | ({
        relationTo: 'color-schemes';
        value: number | ColorScheme;
      } | null)
    | ({
        relationTo: 'subscription-plans';
        value: number | SubscriptionPlan;
      } | null)
    | ({
        relationTo: 'tenants';
        value: number | Tenant;
      } | null)
    | ({
        relationTo: 'system-metrics';
        value: number | SystemMetric;
      } | null)
    | ({
        relationTo: 'conversations';
        value: number | Conversation;
      } | null)
    | ({
        relationTo: 'adaptiveQuizSessions';
        value: number | AdaptiveQuizSession;
      } | null)
    | ({
        relationTo: 'adaptiveQuizResults';
        value: number | AdaptiveQuizResult;
      } | null)
    | ({
        relationTo: 'user-performances';
        value: number | UserPerformance;
      } | null)
    | ({
        relationTo: 'auditlogs';
        value: number | Auditlog;
      } | null)
    | ({
        relationTo: 'generationlogs';
        value: number | Generationlog;
      } | null)
    | ({
        relationTo: 'import-jobs';
        value: number | ImportJob;
      } | null)
    | ({
        relationTo: 'flashcards';
        value: number | Flashcard;
      } | null)
    | ({
        relationTo: 'flashcard-decks';
        value: number | FlashcardDeck;
      } | null)
    | ({
        relationTo: 'learning-paths';
        value: number | LearningPath;
      } | null)
    | ({
        relationTo: 'learning-path-steps';
        value: number | LearningPathStep;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  user?: T;
  alt?: T;
  caption?: T;
  extractedContent?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  studyYear?: T;
  onboardingComplete?: T;
  examDate?: T;
  studyProfile?:
    | T
    | {
        targetScore?: T;
        studyHoursPerWeek?: T;
      };
  competencyProfile?: T;
  hasTakenPlacementQuiz?: T;
  role?: T;
  subscription_status?: T;
  subscriptionStatus?: T;
  subscriptionEndDate?: T;
  stripeCustomerId?: T;
  updatedAt?: T;
  createdAt?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions_select".
 */
export interface SubscriptionsSelect<T extends boolean = true> {
  user?: T;
  provider?: T;
  customerId?: T;
  subscriptionId?: T;
  priceId?: T;
  status?: T;
  trialEnd?: T;
  currentPeriodEnd?: T;
  cancelAtPeriodEnd?: T;
  lastPaymentAt?: T;
  amount?: T;
  currency?: T;
  history?:
    | T
    | {
        type?: T;
        occurredAt?: T;
        raw?: T;
        id?: T;
      };
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "webhook-retry-queue_select".
 */
export interface WebhookRetryQueueSelect<T extends boolean = true> {
  eventId?: T;
  eventType?: T;
  payload?: T;
  retryCount?: T;
  maxRetries?: T;
  lastError?: T;
  status?: T;
  nextRetryAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parentCategory?: T;
  level?: T;
  adaptiveSettings?:
    | T
    | {
        isActive?: T;
        minimumQuestions?: T;
        weight?: T;
      };
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  level?: T;
  author?: T;
  published?: T;
  tags?: T;
  duration?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons_select".
 */
export interface LessonsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  course?: T;
  order?: T;
  published?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sections_select".
 */
export interface SectionsSelect<T extends boolean = true> {
  title?: T;
  course?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assignments_select".
 */
export interface AssignmentsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  course?: T;
  dueDate?: T;
  submitted?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prerequisites_select".
 */
export interface PrerequisitesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quizzes_select".
 */
export interface QuizzesSelect<T extends boolean = true> {
  title?: T;
  quizType?: T;
  description?: T;
  questions?: T;
  course?: T;
  published?: T;
  duration?: T;
  passingScore?: T;
  validationStatus?: T;
  validationNotes?: T;
  validatedBy?: T;
  validatedAt?: T;
  generatedByAI?: T;
  aiGenerationMetadata?:
    | T
    | {
        generationTime?: T;
        validationScore?: T;
        aiModel?: T;
        sourcePrompt?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "questions_select".
 */
export interface QuestionsSelect<T extends boolean = true> {
  questionText?: T;
  questionType?: T;
  options?:
    | T
    | {
        optionText?: T;
        isCorrect?: T;
        id?: T;
      };
  explanation?: T;
  course?: T;
  category?: T;
  difficulty?: T;
  studentLevel?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  adaptiveMetadata?:
    | T
    | {
        averageTimeSeconds?: T;
        successRate?: T;
        timesUsed?: T;
      };
  sourcePageReference?: T;
  generatedByAI?: T;
  aiGenerationPrompt?: T;
  validatedByExpert?: T;
  validatedBy?: T;
  validationStatus?: T;
  validationNotes?: T;
  validatedAt?: T;
  regeneratedAt?: T;
  regenerationReason?: T;
  qualityScore?: T;
  validationIssues?:
    | T
    | {
        issue?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quiz-submissions_select".
 */
export interface QuizSubmissionsSelect<T extends boolean = true> {
  quiz?: T;
  student?: T;
  submissionDate?: T;
  answers?:
    | T
    | {
        question?: T;
        answer?: T;
        isCorrect?: T;
        id?: T;
      };
  finalScore?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "progress_select".
 */
export interface ProgressSelect<T extends boolean = true> {
  user?: T;
  lesson?: T;
  status?: T;
  score?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "study-sessions_select".
 */
export interface StudySessionsSelect<T extends boolean = true> {
  title?: T;
  user?: T;
  status?: T;
  estimatedDuration?: T;
  currentStep?: T;
  steps?:
    | T
    | {
        stepId?: T;
        type?: T;
        title?: T;
        description?: T;
        status?: T;
        metadata?: T;
        quiz?: T;
        startedAt?: T;
        completedAt?: T;
        id?: T;
      };
  context?:
    | T
    | {
        course?: T;
        difficulty?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "badges_select".
 */
export interface BadgesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  icon?: T;
  criteria?: T;
  roleVisibility?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "color-schemes_select".
 */
export interface ColorSchemesSelect<T extends boolean = true> {
  name?: T;
  isDefault?: T;
  isActive?: T;
  theme?:
    | T
    | {
        primary?: T;
        secondary?: T;
        accent?: T;
        background?: T;
        text?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscription-plans_select".
 */
export interface SubscriptionPlansSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?:
    | T
    | {
        monthly?: T;
        yearly?: T;
      };
  currency?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  limitations?:
    | T
    | {
        limitation?: T;
        id?: T;
      };
  highlighted?: T;
  ctaLabel?: T;
  ctaHref?: T;
  limits?:
    | T
    | {
        maxUsers?: T;
        maxStorage?: T;
        maxCourses?: T;
      };
  isActive?: T;
  displayOrder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  status?: T;
  plan?: T;
  contact?:
    | T
    | {
        name?: T;
        email?: T;
        phone?: T;
      };
  billing?:
    | T
    | {
        address?: T;
        vatNumber?: T;
        billingEmail?: T;
      };
  quotas?:
    | T
    | {
        maxUsers?: T;
        maxStorage?: T;
        maxCourses?: T;
      };
  branding?:
    | T
    | {
        primaryColor?: T;
        customDomain?: T;
      };
  settings?:
    | T
    | {
        features?: T;
      };
  usage?:
    | T
    | {
        usersCount?: T;
        storageUsed?: T;
        lastActivity?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "system-metrics_select".
 */
export interface SystemMetricsSelect<T extends boolean = true> {
  timestamp?: T;
  type?: T;
  value?: T;
  description?: T;
  tenant?: T;
  details?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conversations_select".
 */
export interface ConversationsSelect<T extends boolean = true> {
  title?: T;
  user?: T;
  messages?:
    | T
    | {
        role?: T;
        content?: T;
        timestamp?: T;
        id?: T;
      };
  context?:
    | T
    | {
        course?: T;
        difficulty?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "adaptiveQuizSessions_select".
 */
export interface AdaptiveQuizSessionsSelect<T extends boolean = true> {
  sessionId?: T;
  user?: T;
  questions?: T;
  status?: T;
  basedOnAnalytics?:
    | T
    | {
        weakCategories?: T;
        strongCategories?: T;
        analysisDate?: T;
        overallSuccessRate?: T;
        totalQuizzesAnalyzed?: T;
      };
  questionDistribution?:
    | T
    | {
        weakCategoryQuestions?: T;
        strongCategoryQuestions?: T;
        totalQuestions?: T;
      };
  config?:
    | T
    | {
        weakQuestionsCount?: T;
        strongQuestionsCount?: T;
        targetSuccessRate?: T;
      };
  studentLevel?: T;
  expiresAt?: T;
  questionsCount?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "adaptiveQuizResults_select".
 */
export interface AdaptiveQuizResultsSelect<T extends boolean = true> {
  session?: T;
  user?: T;
  overallScore?: T;
  maxScore?: T;
  successRate?: T;
  timeSpent?: T;
  completedAt?: T;
  categoryResults?:
    | T
    | {
        category?: T;
        questionsCount?: T;
        correctAnswers?: T;
        incorrectAnswers?: T;
        successRate?: T;
        scoreImprovement?: T;
        previousSuccessRate?: T;
        averageTimePerQuestion?: T;
        id?: T;
      };
  recommendations?:
    | T
    | {
        recommendationId?: T;
        type?: T;
        category?: T;
        message?: T;
        priority?: T;
        actionUrl?: T;
        estimatedTimeMinutes?: T;
        id?: T;
      };
  progressComparison?:
    | T
    | {
        previousAverageScore?: T;
        currentScore?: T;
        improvement?: T;
        trend?: T;
        streakDays?: T;
        lastQuizDate?: T;
      };
  nextAdaptiveQuizAvailableAt?: T;
  improvementAreas?:
    | T
    | {
        categoryName?: T;
        id?: T;
      };
  strengthAreas?:
    | T
    | {
        categoryName?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-performances_select".
 */
export interface UserPerformancesSelect<T extends boolean = true> {
  user?: T;
  overallSuccessRate?: T;
  totalQuizzesTaken?: T;
  totalQuestionsAnswered?: T;
  categoryPerformances?:
    | T
    | {
        categoryId?: T;
        categoryName?: T;
        totalQuestions?: T;
        correctAnswers?: T;
        successRate?: T;
        lastAttemptDate?: T;
        questionsAttempted?: T;
        averageTimePerQuestion?: T;
        id?: T;
      };
  weakestCategories?:
    | T
    | {
        categoryId?: T;
        categoryName?: T;
        successRate?: T;
        id?: T;
      };
  strongestCategories?:
    | T
    | {
        categoryId?: T;
        categoryName?: T;
        successRate?: T;
        id?: T;
      };
  lastUpdated?: T;
  analysisDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auditlogs_select".
 */
export interface AuditlogsSelect<T extends boolean = true> {
  user?: T;
  action?: T;
  collection?: T;
  documentId?: T;
  diff?: T;
  timestamp?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "generationlogs_select".
 */
export interface GenerationlogsSelect<T extends boolean = true> {
  user?: T;
  action?: T;
  status?: T;
  generationConfig?:
    | T
    | {
        subject?: T;
        categoryId?: T;
        categoryName?: T;
        studentLevel?: T;
        questionCount?: T;
        difficulty?: T;
        medicalDomain?: T;
        includeExplanations?: T;
        customInstructions?: T;
      };
  result?:
    | T
    | {
        quizId?: T;
        questionIds?:
          | T
          | {
              questionId?: T;
              id?: T;
            };
        questionsCreated?: T;
        validationScore?: T;
        aiModel?: T;
        aiProvider?: T;
        tokensUsed?: T;
      };
  error?:
    | T
    | {
        type?: T;
        message?: T;
        details?: T;
        stackTrace?: T;
      };
  performance?:
    | T
    | {
        duration?: T;
        aiResponseTime?: T;
        validationTime?: T;
        databaseTime?: T;
        retryCount?: T;
        promptLength?: T;
        responseLength?: T;
      };
  metadata?:
    | T
    | {
        ipAddress?: T;
        userAgent?: T;
        sessionId?: T;
        requestId?: T;
        environment?: T;
        version?: T;
      };
  createdAt?: T;
  completedAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "import-jobs_select".
 */
export interface ImportJobsSelect<T extends boolean = true> {
  uploadedFile?: T;
  fileName?: T;
  importType?: T;
  status?: T;
  progress?: T;
  uploadedBy?: T;
  createQuizContainer?: T;
  quizMetadata?:
    | T
    | {
        title?: T;
        description?: T;
        category?: T;
      };
  validationResults?: T;
  processingResults?: T;
  errors?:
    | T
    | {
        type?: T;
        severity?: T;
        message?: T;
        itemIndex?: T;
        id?: T;
      };
  completedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flashcards_select".
 */
export interface FlashcardsSelect<T extends boolean = true> {
  front?: T;
  back?: T;
  hints?:
    | T
    | {
        hint?: T;
        id?: T;
      };
  category?: T;
  difficulty?: T;
  level?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  deck?: T;
  imageUrl?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flashcard-decks_select".
 */
export interface FlashcardDecksSelect<T extends boolean = true> {
  deckName?: T;
  description?: T;
  category?: T;
  level?: T;
  difficulty?: T;
  cardCount?: T;
  author?: T;
  source?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "learning-paths_select".
 */
export interface LearningPathsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  level?: T;
  difficulty?: T;
  estimatedDuration?: T;
  stepCount?: T;
  prerequisites?:
    | T
    | {
        prerequisite?: T;
        id?: T;
      };
  objectives?:
    | T
    | {
        objective?: T;
        id?: T;
      };
  author?: T;
  source?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "learning-path-steps_select".
 */
export interface LearningPathStepsSelect<T extends boolean = true> {
  learningPath?: T;
  stepId?: T;
  title?: T;
  description?: T;
  order?: T;
  estimatedTime?: T;
  difficulty?: T;
  prerequisites?:
    | T
    | {
        stepId?: T;
        id?: T;
      };
  objectives?:
    | T
    | {
        objective?: T;
        id?: T;
      };
  questions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Configuration des accès CORS (Cross-Origin Resource Sharing)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cors-config".
 */
export interface CorsConfig {
  id: number;
  /**
   * Liste des URLs qui peuvent accéder à l'API
   */
  allowedOrigins?:
    | {
        /**
         * URL complète (ex: https://monsite.com)
         */
        url: string;
        /**
         * Description pour identifier l'usage
         */
        description?: string | null;
        /**
         * Activer/désactiver cette origine
         */
        isActive?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * En-têtes HTTP supplémentaires à autoriser
   */
  customHeaders?:
    | {
        /**
         * Nom de l'en-tête (ex: x-custom-header)
         */
        header: string;
        /**
         * Description de l'usage de cet en-tête
         */
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Environnement actif
   */
  environment: 'development' | 'production';
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cors-config_select".
 */
export interface CorsConfigSelect<T extends boolean = true> {
  allowedOrigins?:
    | T
    | {
        url?: T;
        description?: T;
        isActive?: T;
        id?: T;
      };
  customHeaders?:
    | T
    | {
        header?: T;
        description?: T;
        id?: T;
      };
  environment?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProcessWebhookRetryQueue".
 */
export interface ProcessWebhookRetryQueue {
  input?: unknown;
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CleanupWebhookRetryQueue".
 */
export interface CleanupWebhookRetryQueue {
  input?: unknown;
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}